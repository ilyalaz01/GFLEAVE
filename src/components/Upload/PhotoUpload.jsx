// src/components/Upload/PhotoUpload.jsx
import React, { useState } from 'react';
import { useAuth } from '../../context/AuthContext';
import { savePhoto } from '../../firebase/firebaseUtils';

const PhotoUpload = () => {
  const [formData, setFormData] = useState({
    title: '',
    year: new Date().getFullYear(),
    location: '',
    description: ''
  });
  const [selectedFile, setSelectedFile] = useState(null);
  const [previewUrl, setPreviewUrl] = useState('');
  const [uploading, setUploading] = useState(false);
  
  const { currentUser } = useAuth();

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleFileChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      setSelectedFile(file);
      const reader = new FileReader();
      reader.onload = (e) => setPreviewUrl(e.target.result);
      reader.readAsDataURL(file);
    } else {
      setSelectedFile(null);
      setPreviewUrl('');
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!selectedFile) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ');
      return;
    }

    setUploading(true);
    
    try {
      await savePhoto(formData, selectedFile, currentUser);
      
      // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
      setFormData({
        title: '',
        year: new Date().getFullYear(),
        location: '',
        description: ''
      });
      setSelectedFile(null);
      setPreviewUrl('');
      
      alert('‚úÖ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!');
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
      alert('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏');
    } finally {
      setUploading(false);
    }
  };

  return (
    <div className="upload-form">
      <form onSubmit={handleSubmit}>
        <div className="form-group">
          <label className="form-label">üì∏ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ</label>
          <input
            type="file"
            onChange={handleFileChange}
            className="form-input"
            accept="image/*"
            required
          />
          {previewUrl && (
            <div className="file-preview">
              <img src={previewUrl} alt="Preview" />
            </div>
          )}
        </div>

        <div className="form-group">
          <label className="form-label">üìù –ù–∞–∑–≤–∞–Ω–∏–µ</label>
          <input
            type="text"
            name="title"
            value={formData.title}
            onChange={handleInputChange}
            className="form-input"
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ù–∞—à –ø–µ—Ä–≤—ã–π –ø–æ—Ü–µ–ª—É–π"
            required
          />
        </div>

        <div className="form-group">
          <label className="form-label">üìÖ –ì–æ–¥</label>
          <input
            type="number"
            name="year"
            value={formData.year}
            onChange={handleInputChange}
            className="form-input"
            min="2000"
            max="2030"
            required
          />
        </div>

        <div className="form-group">
          <label className="form-label">üìç –ú–µ—Å—Ç–æ</label>
          <input
            type="text"
            name="location"
            value={formData.location}
            onChange={handleInputChange}
            className="form-input"
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ"
            required
          />
        </div>

        <div className="form-group">
          <label className="form-label">üí≠ –û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
          <textarea
            name="description"
            value={formData.description}
            onChange={handleInputChange}
            className="form-input form-textarea"
            placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ–± —ç—Ç–æ–º –º–æ–º–µ–Ω—Ç–µ..."
          />
        </div>

        <button 
          type="submit" 
          className="upload-button"
          disabled={uploading}
        >
          {uploading ? 'üì∏ –ó–∞–≥—Ä—É–∂–∞–µ–º...' : 'üíï –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ'}
        </button>
      </form>
    </div>
  );
};

export default PhotoUpload;